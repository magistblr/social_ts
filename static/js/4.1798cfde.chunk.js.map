{"version":3,"sources":["components/Profile/Profile.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/ProfileInfo/ProfileStatus.tsx","assets/img/edit.svg","components/Profile/ProfileInfo/ProfileInfo.tsx","components/Profile/MyPosts/Post/Post.tsx","components/Profile/MyPosts/MyPosts.tsx","components/Profile/MyPosts/MyPostsContainer.tsx","components/Profile/Profile.tsx","components/Profile/ProfileContainer.tsx","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","components/hoc/withAuthRedirect.tsx","components/Profile/ProfileInfo/ProfileInfo.module.css"],"names":["module","exports","ProfileStatus","state","editMode","status","props","activateEditMode","setState","deactivateEditMode","updateUserStatus","onStatusChange","e","currentTarget","value","prevProps","prevState","this","className","s","status_wrapper","status_span","onDoubleClick","status_input","onChange","autoFocus","onBlur","Component","ProfileDataEditabled","profile","updateProfile","onChangeEditForm","useForm","register","handleSubmit","form","onSubmit","data","field","defaultValue","fullName","aboutMe","field_contacts","contacts","facebook","website","vk","twitter","instagram","youtube","mainLink","github","field_job","defaultChecked","lookingForAJob","type","lookingForAJobDescription","save","ProfileData","user_descr_lists","user_descr_list","ProfileInfo","isOwner","savePhoto","useState","editForm","setEditForm","Spinner","user","image","user_img","src","photos","large","userPhoto","alt","wrapper_ava","htmlFor","ava","id","target","files","length","data_wrapper","user_name","edit","onClick","Post","wrapper","avatar","avatar_img","message_wrapper","message","MyPosts","postsElements","profilePage","posts","map","text","newPostText","new_post","new_post_textarea","onPostChangeText","placeholder","posts_btn","btn_button","addPost","MyPostsContainer","connect","dispatch","addPostActionCreator","onPostChangeTextActionCreator","Profile","content","ProfileContainer","userId","match","params","authorizedUserId","history","push","getUserProfile","getUserStatus","refreshProfile","snapshot","updateUserProfile","React","compose","auth","withRouter","withAuthRedirect","_objectWithoutProperties","source","excluded","key","i","sourceKeys","Object","keys","indexOf","getOwnPropertySymbols","sourceSymbolKeys","prototype","propertyIsEnumerable","call","mapStateToPropsForRedirect","isAuth","restProps","to"],"mappings":"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","file":"static/js/4.1798cfde.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Profile_wrapper__3ysYR\",\"content_img\":\"Profile_content_img__84EmG\",\"content\":\"Profile_content__1CSvy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Post_wrapper__3KSP_\",\"avatar\":\"Post_avatar__2f4zC\",\"avatar_img\":\"Post_avatar_img__2IHO-\",\"message_wrapper\":\"Post_message_wrapper__96s_b\",\"messages_message\":\"Post_messages_message__2R41_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts\":\"MyPosts_posts__9Y59T\",\"post\":\"MyPosts_post__2wS-p\",\"new_post\":\"MyPosts_new_post__C3IhM\",\"new_post_textarea\":\"MyPosts_new_post_textarea__qfhTp\",\"posts_btn\":\"MyPosts_posts_btn__29dr_\",\"btn_button\":\"MyPosts_btn_button__2QB03\"};","import React, { ChangeEvent, Component } from 'react'\r\nimport s from './ProfileInfo.module.css'\r\n\r\n\r\ntype ProfileStatusType ={\r\n  status: string\r\n  updateUserStatus: (userId: string) => void\r\n  isOwner: boolean\r\n}\r\n\r\nexport default class ProfileStatus extends Component<ProfileStatusType> {\r\n  state = {\r\n    editMode: false,\r\n    status: this.props.status\r\n  }\r\n\r\n  activateEditMode = () => {\r\n    this.setState({\r\n      editMode: true\r\n    })\r\n  }\r\n\r\n  deactivateEditMode = () => {\r\n    this.setState({\r\n      editMode: false\r\n    })\r\n    this.props.updateUserStatus(this.state.status)\r\n  }\r\n\r\n  onStatusChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n    this.setState({\r\n      status: e.currentTarget.value\r\n    })\r\n  }\r\n\r\n  componentDidUpdate(prevProps: ProfileStatusType, prevState: ProfileStatusType){\r\n    if(prevProps.status !== this.props.status){\r\n      this.setState({\r\n        status: this.props.status\r\n      })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={s.status_wrapper}>\r\n          {!this.state.editMode &&\r\n            <div className={s.status_span}>\r\n              <span onDoubleClick={this.activateEditMode}>{this.props.status ? this.props.status : \"-----------------\"}</span>\r\n            </div>\r\n          }\r\n          {this.state.editMode &&\r\n            <div className={s.status_input}>\r\n              <input onChange={this.onStatusChange} autoFocus onBlur={this.deactivateEditMode} value={this.state.status}></input>\r\n            </div>\r\n          }\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","export default __webpack_public_path__ + \"static/media/edit.708c6b27.svg\";","import React, { ChangeEvent, useState } from 'react';\r\nimport { ProfileType } from '../../../redux/profileReducer';\r\nimport Spinner from '../../Spinner/Spinner';\r\nimport ProfileStatus from './ProfileStatus';\r\nimport userPhoto from '../../../assets/img/users.png'\r\nimport edit from '../../../assets/img/edit.svg'\r\n\r\nimport s from './ProfileInfo.module.css'\r\nimport { SubmitHandler, useForm } from 'react-hook-form';\r\n\r\n\r\ntype ProfileInfoPropsType = {\r\n  profile: ProfileType\r\n  status: string\r\n  updateUserStatus: (userId: string) => void\r\n  isOwner: boolean\r\n  savePhoto: (file: File) => void\r\n  updateProfile: (profile: {}) => void\r\n}\r\n\r\ntype ProfileDataType = {\r\n  profile: ProfileType\r\n  updateProfile: (profile: {}) => void\r\n}\r\n\r\ntype TypeProfileDataEditabled = {\r\n  profile: ProfileType\r\n  updateProfile: (profile: {}) => void\r\n  onChangeEditForm: () => void\r\n}\r\n\r\nconst ProfileInfo: React.FC<ProfileInfoPropsType> = ({profile, status, updateUserStatus, isOwner, savePhoto, updateProfile}) => {\r\n\r\n  let [editForm, setEditForm] = useState(false);\r\n\r\n  if (!profile) {\r\n    return <Spinner/>\r\n  }\r\n\r\n  const onAvatarSelected = (e:ChangeEvent<HTMLInputElement>) => {\r\n    if(e.target.files?.length) {\r\n      savePhoto(e.target.files[0]);\r\n    }\r\n  }\r\n\r\n  const onChangeEditForm = () => {\r\n    setEditForm(!editForm)\r\n  }\r\n\r\n  return (\r\n    <div className={s.user}>\r\n      <div className={s.image}>\r\n        <img className={s.user_img} src={ profile.photos.large || userPhoto} alt=\"avatar\" />\r\n        {isOwner &&\r\n            <div className={s.wrapper_ava}>\r\n              <label htmlFor=\"file-input\" className={s.ava}>\r\n                <input id=\"file-input\" type={\"file\"} onChange={onAvatarSelected}/>\r\n              </label>\r\n            </div>\r\n        }\r\n      </div>\r\n      <div className={s.data_wrapper}>\r\n        <div className={s.user_name}>{profile.fullName}</div>\r\n        {isOwner\r\n          //main user\r\n          ? <ProfileStatus status={status} updateUserStatus={updateUserStatus} isOwner={isOwner}/>\r\n          //other users\r\n          : <div className={s.status_wrapper}>\r\n              <span>{status ? status : \"-----------------\"}</span>\r\n            </div>\r\n        }\r\n\r\n        {editForm\r\n                ? <ProfileDataEditabled profile={profile} updateProfile={updateProfile} onChangeEditForm={onChangeEditForm}/>\r\n                : <ProfileData  profile={profile} updateProfile={updateProfile}/>}\r\n        {isOwner && <div className={s.edit} onClick={onChangeEditForm}><img src={edit} alt=\"edit\"/>Edit profile</div>}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\n\r\n\r\n\r\nconst ProfileDataEditabled: React.FC<TypeProfileDataEditabled> = ({profile, updateProfile, onChangeEditForm}) => {\r\n\r\n  const { register, handleSubmit} = useForm<ProfileType>();\r\n  const onSubmit: SubmitHandler<ProfileType> = (data) => {\r\n    updateProfile(data);\r\n    onChangeEditForm()\r\n  }\r\n\r\n    return (\r\n      <form className={s.form} onSubmit={handleSubmit(onSubmit)}>\r\n            <ul>\r\n              <li  className={s.field}>Full name:\r\n                <input defaultValue={profile.fullName} {...register(\"fullName\")} />\r\n              </li>\r\n              <li className={s.field}>About me:\r\n                <input defaultValue={profile.aboutMe} {...register(\"aboutMe\")} />\r\n              </li>\r\n              <li className={s.field_contacts}>Contacts:\r\n                <li className={s.field}>Facebook:\r\n                  <input defaultValue={profile.contacts.facebook} {...register(\"contacts.facebook\")} />\r\n                </li>\r\n                <li className={s.field}>Website:\r\n                  <input defaultValue={profile.contacts.website} {...register(\"contacts.website\")} />\r\n                </li>\r\n                <li className={s.field}>VK:\r\n                  <input defaultValue={profile.contacts.vk} {...register(\"contacts.vk\")} />\r\n                </li>\r\n                <li className={s.field}>Twitter:\r\n                  <input defaultValue={profile.contacts.twitter} {...register(\"contacts.twitter\")} />\r\n                </li>\r\n                <li className={s.field}>Instagram:\r\n                  <input defaultValue={profile.contacts.instagram} {...register(\"contacts.instagram\")} />\r\n                </li>\r\n                <li className={s.field}>Youtube:\r\n                  <input defaultValue={profile.contacts.youtube} {...register(\"contacts.youtube\")} />\r\n                </li>\r\n                <li className={s.field}>Main link:\r\n                  <input defaultValue={profile.contacts.mainLink} {...register(\"contacts.mainLink\")} />\r\n                </li>\r\n                <li className={s.field}>Github:\r\n                  <input defaultValue={profile.contacts.github} {...register(\"contacts.github\")} />\r\n                </li>\r\n                <li className={s.field_job}>Looking for a Job:\r\n                  <input defaultChecked={profile.lookingForAJob} type='checkbox' {...register(\"lookingForAJob\")}/>\r\n                </li>\r\n                <li className={s.field}>Job description:\r\n                  <input defaultValue={profile.lookingForAJobDescription} {...register(\"lookingForAJobDescription\")} />\r\n                </li>\r\n              </li>\r\n            </ul>\r\n            <div className={s.save}><input type=\"submit\" value={'save'}/></div>\r\n      </form>\r\n    )\r\n}\r\n\r\n\r\nconst ProfileData: React.FC<ProfileDataType> = ({profile}) => {\r\n    return (\r\n      <div className=\"content__user-description\">\r\n        <ul className={s.user_descr_lists}>\r\n          <li className={s.user_descr_list}>About me: <span>{profile.aboutMe}</span></li>\r\n          <li className={s.user_descr_list}>Contacts:\r\n            <li className={s.user_descr_list}>Facebook: <span>{profile.contacts.facebook}</span></li>\r\n            <li className={s.user_descr_list}>Website: {profile.contacts.website}</li>\r\n            <li className={s.user_descr_list}>VK: {profile.contacts.vk}</li>\r\n            <li className={s.user_descr_list}>Twitter: {profile.contacts.twitter}</li>\r\n            <li className={s.user_descr_list}>Instagram: {profile.contacts.instagram}</li>\r\n            <li className={s.user_descr_list}>Youtube: {profile.contacts.youtube}</li>\r\n            <li className={s.user_descr_list}>Looking for a Job: {profile.lookingForAJob ? 'Yes' : 'No'}</li>\r\n            <li className={s.user_descr_list}>Github: {profile.contacts.github}</li>\r\n            <li className={s.user_descr_list}>Job description: {profile.lookingForAJobDescription}</li>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;\r\n","import React from 'react';\r\nimport s from './Post.module.css'\r\n\r\nexport type PostType = {\r\n  message: string\r\n}\r\n\r\n\r\nconst Post: React.FC<PostType> = (props) => {\r\n\r\n\r\n  return (\r\n    <div className={s.wrapper}>\r\n      <div className={s.avatar}>\r\n        <img className={s.avatar_img} src=\"https://yt3.ggpht.com/ytc/AAUvwniWcUyONM4Tu8W_39ae7hyeTOrxPjdmjeKjyb6U=s900-c-k-c0x00ffffff-no-rj\" alt=\"avatar\" />\r\n      </div>\r\n      <div className={s.message_wrapper}>\r\n        <div className=\"messages_message\">{props.message}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n","import React, { ChangeEvent } from 'react';\r\nimport Post from './Post/Post';\r\nimport s from './MyPosts.module.css';\r\nimport { MyPostsPropsType } from './MyPostsContainer';\r\n\r\n\r\n\r\n\r\nconst MyPosts: React.FC<MyPostsPropsType> = (props) => {\r\n  const postsElements = props.profilePage.posts.map((posts) => <Post message={posts.message} key={posts.id} />);\r\n\r\n  let text = props.profilePage.newPostText\r\n\r\n  const onAddPost = () => {\r\n    props.addPost(text)\r\n  };\r\n\r\n\r\n  const onPostChangeText = (e: ChangeEvent<HTMLTextAreaElement>) => {\r\n    let text = e.currentTarget.value\r\n    props.onPostChangeText(text)\r\n  }\r\n\r\n\r\n  return (\r\n    <div className={s.posts}>\r\n      <div className={s.new_post}>\r\n        <textarea\r\n          className={s.new_post_textarea}\r\n          onChange={onPostChangeText}\r\n          value={text}\r\n          placeholder=\"What is the news?\"\r\n        />\r\n      </div>\r\n      <div className={s.posts_btn}>\r\n        <button className={s.btn_button}\r\n                onClick={onAddPost}\r\n                >\r\n          Send\r\n        </button>\r\n      </div>\r\n      {postsElements}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyPosts;\r\n","// import React from 'react';\r\nimport MyPosts from './MyPosts';\r\nimport { addPostActionCreator, onPostChangeTextActionCreator, ProfilePageType } from '../../../redux/profileReducer';\r\nimport { StateType } from '../../../redux/store';\r\nimport { connect } from 'react-redux';\r\nimport { Dispatch } from 'redux';\r\n\r\n\r\n\r\n\r\n\r\ntype MapStatePropsType = {\r\n  profilePage: ProfilePageType\r\n}\r\n\r\ntype MapDispatchToProps = {\r\n  addPost: (body: string) => void\r\n  onPostChangeText: (body: string) => void\r\n}\r\n\r\nexport type MyPostsPropsType = MapStatePropsType & MapDispatchToProps\r\n\r\nlet mapStateToProps = (state: StateType): MapStatePropsType => {\r\n  return {\r\n    profilePage: state.profilePage\r\n  }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch: Dispatch): MapDispatchToProps => {\r\n  return {\r\n    addPost: (text: string) => {\r\n      if(text){\r\n        dispatch(addPostActionCreator(text));\r\n      }\r\n      dispatch(onPostChangeTextActionCreator(''));\r\n    },\r\n    onPostChangeText: (text: string) => {\r\n      dispatch(onPostChangeTextActionCreator(text));\r\n    }\r\n  }\r\n}\r\n\r\nexport const MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\r\n\r\n","import React from 'react';\r\n\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\nimport s from './Profile.module.css';\r\nimport { MyPostsContainer } from '../Profile/MyPosts/MyPostsContainer';\r\nimport { ProfileType } from '../../redux/profileReducer';\r\n\r\ntype ProfilePropsType = {\r\n  profile: ProfileType\r\n  status: string\r\n  updateUserStatus: (userId: string) => void\r\n  isOwner: boolean\r\n  savePhoto: (photo: File) => void\r\n  updateProfile: (profile: {}) => void\r\n}\r\n\r\nconst Profile: React.FC<ProfilePropsType> = ({profile, status, updateUserStatus, isOwner, savePhoto, updateProfile}) => {\r\n\r\n\r\n  return (\r\n    <div className={s.wrapper}>\r\n      <header className=\"content__header\">\r\n        {/* <img\r\n          className={s.content_img}\r\n          src=\"https://static9.depositphotos.com/1656823/1156/i/950/depositphotos_11563134-stock-photo-blue-water.jpg\"\r\n          alt=\"background\"\r\n        /> */}\r\n      </header>\r\n\r\n      <div className={s.content}>\r\n        <ProfileInfo  profile={profile}\r\n                      status={status}\r\n                      updateUserStatus={updateUserStatus}\r\n                      savePhoto={savePhoto}\r\n                      isOwner={isOwner}\r\n                      updateProfile={updateProfile}\r\n                      />\r\n\r\n        {isOwner && <MyPostsContainer/>}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport {getUserProfile, ProfileType, getUserStatus, updateUserStatus, savePhoto, updateUserProfile} from '../../redux/profileReducer'\r\n\r\nimport Profile from \"./Profile\";\r\nimport { RouteComponentProps, withRouter } from 'react-router-dom';\r\nimport { StateType } from '../../redux/store';\r\nimport { withAuthRedirect } from '../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\ntype MapStatePropsType = {\r\n  profile: ProfileType\r\n  status: string\r\n  authorizedUserId: string\r\n}\r\n\r\ntype ParamsType = {\r\n  userId: string\r\n}\r\n\r\ntype MapDispatchPropsType = {\r\n  getUserProfile: (userId: string) => void\r\n  getUserStatus: (userId: string) => void\r\n  updateUserStatus: (userId: string) => void\r\n  savePhoto: (file: File) => void\r\n  updateUserProfile: (profile: {}) => void\r\n}\r\n\r\n\r\ntype OwnPropsType = MapStatePropsType & MapDispatchPropsType\r\ntype PropsType = RouteComponentProps<ParamsType> & OwnPropsType\r\n\r\n\r\nclass ProfileContainer extends React.Component<PropsType> {\r\n\r\n      refreshProfile() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if (!userId) {\r\n            this.props.history.push(\"/login\")\r\n          }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getUserStatus(userId);\r\n      }\r\n\r\n      componentDidMount() {\r\n        this.refreshProfile()\r\n      }\r\n\r\n      componentDidUpdate(prevProps: PropsType, prevState: PropsType, snapshot: PropsType) {\r\n        if(this.props.match.params.userId !== prevProps.match.params.userId){\r\n          this.refreshProfile()\r\n        }\r\n      }\r\n\r\n      render() {\r\n            return (\r\n              <Profile  profile={this.props.profile}\r\n                        status={this.props.status}\r\n                        updateUserStatus={this.props.updateUserStatus}\r\n                        isOwner={!this.props.match.params.userId}\r\n                        savePhoto={this.props.savePhoto}\r\n                        updateProfile={this.props.updateUserProfile}\r\n                        />\r\n          )\r\n      }\r\n}\r\n\r\n\r\n\r\nlet mapStateToProps = (state: StateType): MapStatePropsType => ({\r\n  profile: state.profilePage.profile,\r\n  status: state.profilePage.status,\r\n  authorizedUserId: state.auth.userId,\r\n});\r\n\r\nexport default compose<React.ComponentType>(\r\n  connect(mapStateToProps,{getUserProfile, getUserStatus, updateUserStatus, savePhoto, updateUserProfile}),\r\n  withRouter,\r\n  withAuthRedirect\r\n)(ProfileContainer)\r\n\r\n","import objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import React from 'react';\r\nimport { ComponentType } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect} from 'react-router-dom';\r\nimport { StateType } from '../../redux/store';\r\n\r\n\r\ntype MapStateToPropsType = {\r\n  isAuth: boolean\r\n}\r\n\r\nlet mapStateToPropsForRedirect = (state: StateType): MapStateToPropsType => {\r\n  return {\r\n    isAuth: state.auth.isAuth\r\n  }\r\n};\r\n\r\nexport function withAuthRedirect<T>(Component: ComponentType<T>)  {\r\n\r\n  const RedirectComponent = (props: MapStateToPropsType) =>  {\r\n      let {isAuth, ...restProps} = props\r\n      if (!isAuth) return <Redirect to={\"/login\"}/>\r\n      return <Component {...restProps as T}/>\r\n  }\r\n\r\n  let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n\r\n  return ConnectedAuthRedirectComponent;\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"user\":\"ProfileInfo_user__2TDrZ\",\"user_img\":\"ProfileInfo_user_img__2xBB2\",\"user_name\":\"ProfileInfo_user_name__xNmFt\",\"user_descr_lists\":\"ProfileInfo_user_descr_lists__3hEot\",\"user_descr_list\":\"ProfileInfo_user_descr_list__ZNfrp\",\"user_description_lists\":\"ProfileInfo_user_description_lists__2eVR-\",\"status_wrapper\":\"ProfileInfo_status_wrapper__1N2II\",\"status_input\":\"ProfileInfo_status_input__3HHYS\",\"status_span\":\"ProfileInfo_status_span__1ntix\",\"image\":\"ProfileInfo_image__zo_b0\",\"wrapper_ava\":\"ProfileInfo_wrapper_ava__xaggI\",\"ava\":\"ProfileInfo_ava__39LzL\",\"data_wrapper\":\"ProfileInfo_data_wrapper__3PuOL\",\"form\":\"ProfileInfo_form__1YEXr\",\"edit\":\"ProfileInfo_edit__1AGu-\",\"field\":\"ProfileInfo_field__ld37O\",\"field_job\":\"ProfileInfo_field_job__2w4_n\",\"field_contacts\":\"ProfileInfo_field_contacts__3_ETS\",\"save\":\"ProfileInfo_save__1kH2T\"};"],"sourceRoot":""}