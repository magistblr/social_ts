{"version":3,"sources":["components/Paginator/Paginator.module.css","components/Login/LoginForm.module.css","components/Users/Users.module.css","App.module.css","components/Sidebar/Navbar/Navbar.module.css","components/Header/Header.module.css","components/Spinner/Spinner.tsx","components/Login/Login.module.css","components/Spinner/Spinner.module.css","redux/profileReducer.ts","assets/img/users.png","redux/dialogsReducer.ts","components/News/News.module.css","components/Music/Music.module.css","components/Settings/Settings.module.css","components/Sidebar/Sidebar.module.css","components/Users/UserSkeletone/UserSkeletone.module.css","api/api.ts","assets/img/page_u—Å.jpg","components/News/News.tsx","components/Music/Music.tsx","components/Settings/Settings.tsx","redux/authReducer.ts","components/Sidebar/Navbar/Navbar.tsx","components/Sidebar/Sidebar.tsx","components/Sidebar/SidebarContainer.tsx","redux/usersReducer.ts","components/Paginator/Paginator.tsx","components/Users/UserSkeletone/UserSkeletone.tsx","components/Users/Users.tsx","components/Users/UsersContainer.tsx","assets/img/soc_logo.png","components/Header/Header.tsx","components/Header/HeaderContainer.tsx","components/Login/LoginForm.tsx","components/Login/Login.tsx","redux/appReducer.ts","components/FriendsBar/FriendsBar.tsx","App.tsx","redux/sidebarReducer.ts","redux/friendsReducer.ts","redux/store.ts","index.tsx"],"names":["module","exports","Spinner","className","s","wrapper","spinner","ADD_POST","ON_POST_CHANGE","SET_USER_PROFILE","SET_STATUS","SET_PHOTO","initialState","posts","id","v1","message","newPostText","profile","userId","lookingForAJob","lookingForAJobDescription","fullName","aboutMe","contacts","github","vk","facebook","instagram","twitter","website","youtube","mainLink","photos","small","large","status","addPostActionCreator","text","type","newText","onPostChangeTextActionCreator","setStatus","getUserProfile","dispatch","userAPI","getProfile","then","response","data","getUserStatus","profileAPI","getStatus","console","log","updateUserStatus","updateStatus","resultCode","updateUserProfile","getState","auth","updateProfile","savePhoto","file","profileReducer","state","action","NEW_MESSAGE","SEND_MESSAGE","dialogs","name","messages","friendMessages","newMessageBody","updateMessageCreator","sendMessageCreator","dialogsReducer","ResultCodesEnum","instance","axios","create","withCredentials","baseURL","headers","getUsers","currentPage","pageSize","get","follow","post","unfollow","delete","warn","put","photoFile","formData","FormData","append","authAPI","me","login","email","password","remember","captcha","res","logout","securityAPI","News","src","page","alt","Music","Settings","SET_USER_DATA","SET_MESSAGE_ERROR_DATA","SET_CAPTCHA","isAuth","setAuthUserData","setErrorMessageData","payload","setCaptcha","url","getAuthUserData","getCaptcha","authReducer","Navbar","props","list","list_items","activeClassName","item_active","item","to","Sidebar","navElements","navbar","map","items","withUrlDataContainerComponent","withRouter","useEffect","connect","sidebarPage","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","TOGGLE_IS_FETCHING","TOGGLE_IS_FOLLOWING_PROGRESS","users","totalUsersCount","isFetching","followingInProgress","setCurrentPages","toggleIsFetching","toggleFollowingProgress","Paginator","React","memo","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","lastPages","length","pagination_wrapper","arrow","onClick","arrow_disable","pagination","filter","p","pagination_item_wrapper","onPageChanged","pagination_wrapper_selected","ellipsis","MyLoader","speed","width","height","viewBox","backgroundColor","foregroundColor","cx","cy","r","x","y","rx","ry","Users","UserSkeletone","u","logo","userPhoto","followed","disabled","some","descr_wrapper_outer","descr_wrapper_inner","descr","descr_status","location","UsersContainer","pageNumber","this","Component","WithUrlDataContainerComponent","usersPage","followSuccess","unfollowSuccess","setUsers","totalCount","count","Header","onLogout","header","header_img","button","header_login","withRout","setState","compose","Success","LoginForm","useForm","register","handleSubmit","errors","formState","watch","useDispatch","errorAuth","useSelector","form","onSubmit","Error","Captcha","rememberMe","input","required","maxLength","placeholder","minLength","checkbox_wrapper","checkbox","input_captcha","value","errorMessage","Login","SET_INITIALIZED","initialized","initializedSuccess","appReducer","FriendsBar","friendsElements","DialogsContainer","lazy","ProfileContainer","App","app_wrapper","app_outer","app_inner","content","path","render","fallback","app","sidebarReducer","friends","friendsReducer","rootReducer","combineReducers","profilePage","dialogsPage","friendsBar","store","createStore","applyMiddleware","thunkMiddleware","window","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.46c27d94.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"pagination_wrapper\":\"Paginator_pagination_wrapper__1v_7L\",\"pagination\":\"Paginator_pagination__3PXe4\",\"pagination_item_wrapper\":\"Paginator_pagination_item_wrapper__1NlPV\",\"pagination_wrapper_selected\":\"Paginator_pagination_wrapper_selected__H0QdS\",\"ellipsis\":\"Paginator_ellipsis__8EaMS\",\"arrow_disable\":\"Paginator_arrow_disable__xjbFE\",\"arrow\":\"Paginator_arrow__1J2z7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"LoginForm_form__iRxG3\",\"input\":\"LoginForm_input__3KeZe\",\"required\":\"LoginForm_required__1iUN3\",\"checkbox_wrapper\":\"LoginForm_checkbox_wrapper__2Zj0x\",\"checkbox\":\"LoginForm_checkbox__GZZ_K\",\"text\":\"LoginForm_text__1juYv\",\"button\":\"LoginForm_button__Dceiy\",\"errorMessage\":\"LoginForm_errorMessage__1o0yS\",\"input_captcha\":\"LoginForm_input_captcha__1F1Ur\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Users_wrapper__3nngw\",\"logo\":\"Users_logo__QHSjf\",\"descr_wrapper_outer\":\"Users_descr_wrapper_outer__2Whhg\",\"descr_wrapper_inner\":\"Users_descr_wrapper_inner__2XT0f\",\"descr\":\"Users_descr__1Rj5K\",\"descr_status\":\"Users_descr_status__24AxJ\",\"location\":\"Users_location__1jpYC\",\"location_city\":\"Users_location_city__2Do-m\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app_wrapper\":\"App_app_wrapper__6AOKE\",\"app_outer\":\"App_app_outer__2tyD3\",\"app_inner\":\"App_app_inner__37UEa\",\"header\":\"App_header__Ogb2n\",\"wrapper\":\"App_wrapper__3rzpo\",\"sidebar\":\"App_sidebar__2jex6\",\"content\":\"App_content__1HEv3\",\"item\":\"App_item__1gNW4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Navbar_list__zuUDk\",\"list_items\":\"Navbar_list_items__F4Xcn\",\"item\":\"Navbar_item__1clCk\",\"item_active\":\"Navbar_item_active__hu_S-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2ylUg\",\"header_img\":\"Header_header_img__1dAnZ\",\"header_login\":\"Header_header_login__MUUDF\",\"button\":\"Header_button__kxxst\",\"btn_button\":\"Header_btn_button__2SK7n\"};","\r\nimport React from 'react'\r\nimport s from './Spinner.module.css'\r\n\r\nfunction Spinner() {\r\n    return (\r\n        <div className={s.wrapper}>\r\n          <div className={s.spinner}></div>\r\n        </div>\r\n      )\r\n    }\r\n\r\n    export default Spinner;\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Login_wrapper__2ubgL\",\"login\":\"Login_login__20bJU\",\"form\":\"Login_form__avJwU\",\"input\":\"Login_input__KYclF\",\"error_input\":\"Login_error_input__3a6Cu\",\"btn\":\"Login_btn__aUYA2\",\"error\":\"Login_error__1E4SK\",\"remember\":\"Login_remember__sEXi4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Spinner_wrapper__3R7Ga\",\"spinner\":\"Spinner_spinner__3zklg\",\"cp-round-animate\":\"Spinner_cp-round-animate__3IRoS\"};","import { v1 } from 'uuid';\r\nimport { Dispatch } from 'redux';\r\nimport { profileAPI, userAPI } from '../api/api';\r\nimport { ThunkAction } from 'redux-thunk';\r\nimport { StateType } from './store';\r\n\r\nexport type ProfilePageType = {\r\n  posts: Array<PostsType>;\r\n  newPostText: string;\r\n  profile: ProfileType\r\n  status: string\r\n};\r\n\r\nexport type PostsType = {\r\n  id: string;\r\n  message: string;\r\n};\r\n\r\nexport type ProfileType = {\r\n  userId: string;\r\n  lookingForAJob: boolean;\r\n  lookingForAJobDescription: string;\r\n  fullName: string\r\n  aboutMe: string;\r\n  contacts: ContactsType;\r\n  photos: PhotosType;\r\n};\r\n\r\ntype ContactsType = {\r\n  github: string;\r\n  vk: string;\r\n  facebook: string;\r\n  instagram: string;\r\n  twitter: string;\r\n  website: string;\r\n  youtube: string;\r\n  mainLink: string;\r\n};\r\n\r\nexport type PhotosType = {\r\n  small: string;\r\n  large: string;\r\n};\r\n\r\nconst ADD_POST = 'ADD_POST';\r\nconst ON_POST_CHANGE = 'ON_POST_CHANGE';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_STATUS = 'SET_STATUS';\r\nconst SET_PHOTO = 'SET_PHOTO';\r\n\r\nlet initialState: ProfilePageType = {\r\n  posts: [\r\n    { id: v1(), message: 'Hi, how are you?' },\r\n    { id: v1(), message: \"It's my first post\" },\r\n  ],\r\n  newPostText: '',\r\n  profile: {\r\n    userId: \"\",\r\n    lookingForAJob: true,\r\n    lookingForAJobDescription: \"\",\r\n    fullName: \"\",\r\n    aboutMe: \"\",\r\n    contacts: {\r\n      github: \"\",\r\n      vk: \"\",\r\n      facebook: \"\",\r\n      instagram: \"\",\r\n      twitter: \"\",\r\n      website: \"\",\r\n      youtube: \"\",\r\n      mainLink: \"\",\r\n    },\r\n    photos: {\r\n      small: \"\",\r\n      large: \"\",\r\n    }\r\n  },\r\n  status: \"----------\",\r\n};\r\n\r\nexport type ProfileActionTypes =\r\n  | ReturnType<typeof addPostActionCreator>\r\n  | ReturnType<typeof onPostChangeTextActionCreator>\r\n  | ReturnType<typeof setUserProfile>\r\n  | ReturnType<typeof setStatus>\r\n  | ReturnType<typeof setSavePhoto>\r\n\r\nconst profileReducer = (state = initialState, action: ProfileActionTypes): ProfilePageType => {\r\n  let copyState;\r\n\r\n  switch (action.type) {\r\n    case ADD_POST:\r\n      copyState = {\r\n        ...state,\r\n        posts: [...state.posts, { id: v1(), message: action.newText }],\r\n      };\r\n      return copyState;\r\n    case ON_POST_CHANGE:\r\n      copyState = {\r\n        ...state,\r\n        newPostText: action.newText,\r\n      };\r\n      return copyState;\r\n    case SET_USER_PROFILE: {\r\n      return {\r\n        ...state,\r\n        profile: action.profile,\r\n      };\r\n    }\r\n    case SET_STATUS: {\r\n      return {\r\n        ...state,\r\n        status: action.status,\r\n      };\r\n    }\r\n    case SET_PHOTO: {\r\n      return {\r\n        ...state,\r\n        profile: {\r\n          ...state.profile,\r\n          photos: action.photos\r\n        },\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport const addPostActionCreator = (text: string) => ({ type: ADD_POST, newText: text } as const);\r\nexport const onPostChangeTextActionCreator = (text: string) => ({ type: ON_POST_CHANGE, newText: text } as const);\r\nexport const setUserProfile = (profile: ProfileType) => ({ type: SET_USER_PROFILE, profile } as const);\r\nexport const setStatus = (status: string) => ({ type: SET_STATUS, status } as const);\r\nexport const updateStatus = (status: string) => ({ type: SET_STATUS, status } as const);\r\nexport const setSavePhoto = (photos: PhotosType) => ({ type: SET_PHOTO, photos } as const);\r\n\r\ntype ThunkType = ThunkAction<void, StateType, unknown, ProfileActionTypes>;\r\n\r\nexport const getUserProfile = (userId: string): ThunkType => {\r\n  return (dispatch: Dispatch<ProfileActionTypes>) => {\r\n    userAPI.getProfile(userId).then((response) => {\r\n      dispatch(setUserProfile(response.data));\r\n    });\r\n  };\r\n};\r\n\r\nexport const getUserStatus = (status: string): ThunkType => {\r\n  return (dispatch: Dispatch<ProfileActionTypes>) => {\r\n    profileAPI.getStatus(status).then((response) => {\r\n      console.log(response.data);\r\n      dispatch(setStatus(response.data));\r\n    });\r\n  };\r\n};\r\n\r\nexport const updateUserStatus = (status: string): ThunkType => {\r\n  return (dispatch: Dispatch<ProfileActionTypes>) => {\r\n    profileAPI.updateStatus(status).then((response) => {\r\n      if(response.data.resultCode === 0){\r\n        dispatch(setStatus(status));\r\n      }\r\n    });\r\n  };\r\n};\r\n\r\nexport const updateUserProfile = (profile: ProfileType): ThunkType => {\r\n  return (dispatch, getState) => {\r\n    const userId = getState().auth.userId\r\n    profileAPI.updateProfile(profile)\r\n    .then((response) => {\r\n      if(response.data.resultCode === 0){\r\n        dispatch(getUserProfile(userId));\r\n      }\r\n    });\r\n  };\r\n};\r\n\r\nexport const savePhoto = (file: string): ThunkType => {\r\n  return (dispatch: Dispatch<ProfileActionTypes>) => {\r\n    profileAPI.savePhoto(file).then((response) => {\r\n      if(response.data.data.resultCode === 0){\r\n        dispatch(setSavePhoto(response.data.photos));\r\n      }\r\n    });\r\n  };\r\n};\r\n\r\nexport default profileReducer;\r\n","export default __webpack_public_path__ + \"static/media/users.dce446e0.png\";","import { v1 } from 'uuid';\r\nimport { FriendMessageType } from '../components/Dialogs/Message/FriendMessage';\r\nimport { MessageType } from '../components/Dialogs/Message/Message';\r\n\r\n\r\nexport type DialogsPageType = {\r\n  dialogs: Array<DialogsType>\r\n  messages: Array<MessageType>\r\n  friendMessages: Array<FriendMessageType>\r\n  newMessageBody: string\r\n}\r\n\r\nexport type DialogsType = {\r\n  id: string\r\n  name: string\r\n}\r\n\r\n\r\nexport type DialogsActionTypes = ReturnType<typeof sendMessageCreator> | ReturnType<typeof updateMessageCreator>\r\n\r\n\r\nconst NEW_MESSAGE = \"NEW_MESSAGE\";\r\nconst SEND_MESSAGE = \"SEND_MESSAGE\";\r\n\r\nlet initialState: DialogsPageType = {\r\n  dialogs: [\r\n    {id: v1(), name: 'Dima'},\r\n    {id: v1(), name: 'Andrey'},\r\n    {id: v1(), name: 'Sveta'},\r\n    {id: v1(), name: 'Sasha'},\r\n    {id: v1(), name: 'Victor'},\r\n    {id: v1(), name: 'Valera'}\r\n  ],\r\n  messages: [\r\n    {id: v1(), message: 'Hi'},\r\n  ],\r\n  friendMessages: [\r\n    {id: v1(), message: 'How are you?'}\r\n  ],\r\n  newMessageBody: ''\r\n}\r\n\r\n\r\n\r\nconst dialogsReducer = (state = initialState, action: DialogsActionTypes): DialogsPageType => {\r\n\r\n  switch (action.type) {\r\n      case NEW_MESSAGE:\r\n        return {\r\n                ...state,\r\n                newMessageBody: action.newText\r\n              }\r\n      case SEND_MESSAGE:\r\n        return {\r\n                ...state,\r\n                messages: [...state.messages, {id: v1(), message: action.newText}]\r\n              }\r\n      default:\r\n        return {...state};\r\n    }\r\n\r\n}\r\n\r\n\r\nexport const updateMessageCreator  = (text: string) => ({type: NEW_MESSAGE, newText: text} as const)\r\nexport const sendMessageCreator  = (text: string) => ({type: SEND_MESSAGE, newText: text} as const)\r\n\r\n\r\nexport default dialogsReducer;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"News_wrapper__1U7S1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Music_wrapper__3d6P5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Settings_wrapper__v2CEr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Sidebar_wrapper__13cMU\",\"friends_label\":\"Sidebar_friends_label__1yany\",\"friends_items\":\"Sidebar_friends_items__1aNcY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"UserSkeletone_wrapper__FwKGT\"};","import axios from \"axios\";\r\nimport { UserType } from \"../redux/usersReducer\";\r\nimport { ProfileType } from './../redux/profileReducer';\r\n\r\nconst instance = axios.create({\r\n  withCredentials: true,\r\n  baseURL: 'https://social-network.samuraijs.com/api/1.0/',    //–∞–≤—Ç–æ–º–∞—Ç–æ–º –ø—Ä–∏–∫–ª–µ–∏–≤–∞–µ—Ç—Å—è –∫ –∞–¥—Ä–µ—Å—É –≤ –∑–∞–ø—Ä–æ—Å–µ(–≤–∞–∂–Ω–æ –ø–∏—Å–∞—Ç—å URL —Å –±–æ–ª—å—à–æ–π –±—É–∫–≤—ã)\r\n  headers: {\r\n    \"API-KEY\": \"b272fdcf-142a-4a7e-8222-fde46b2c383b\"\r\n  }\r\n})\r\n\r\n\r\nexport enum ResultCodesEnum {\r\n  Success = 0,\r\n  Error = 1,\r\n  Captcha = 10\r\n}\r\n\r\ntype ResponseType<D ={}, RC = ResultCodesEnum> = {\r\n  data: D\r\n  messages: string[]\r\n  resultCode: RC\r\n}\r\n\r\ntype MeResponseDataType = {\r\n  id: string\r\n  email: string\r\n  login: string\r\n  isAuth: boolean\r\n}\r\n\r\n\r\nexport type DataType = {\r\n  error: null\r\n  items: UserType[]\r\n  totalCount: number\r\n}\r\n\r\nexport type AuthDataType = {\r\n  data: MeResponseDataType\r\n  resultCode: number\r\n  messages: [] | string\r\n}\r\n\r\ntype Captcha = {\r\n  url: string\r\n}\r\n\r\nexport type LoginType = {\r\n  email: string\r\n  password: string\r\n  rememberMe: boolean\r\n  captcha?: string\r\n}\r\n\r\n\r\n\r\n\r\nexport const userAPI = {\r\n  getUsers(currentPage: number = 1, pageSize: number = 10) {\r\n    return instance.get<DataType>(`users?page=${currentPage}&count=${pageSize}`)       //–∑–∞–ø—Ä–æ—Å\r\n      .then(response => {\r\n        return response.data;\r\n      });\r\n  },\r\n  follow(userId: number) {\r\n    return instance.post(`follow/${userId}`)       //–∑–∞–ø—Ä–æ—Å\r\n  },\r\n\r\n  unfollow(userId: number) {\r\n    return instance.delete(`follow/${userId}`)       //–∑–∞–ø—Ä–æ—Å\r\n  },\r\n  getProfile(userId: string) {\r\n    console.warn('Obsolete method. Please use \"profileAPI\" object.');\r\n    return profileAPI.getProfile(userId)\r\n  }\r\n}\r\n\r\nexport const profileAPI = {\r\n  getProfile(userId: string) {\r\n    return instance.get(`profile/${userId}`)\r\n  },\r\n  getStatus(userId: string){\r\n    return instance.get(`profile/status/${userId}`)\r\n  },\r\n  updateStatus(status: string){\r\n    return instance.put(`profile/status`, {status: status})\r\n  },\r\n  updateProfile(profile: ProfileType){\r\n    return instance.put(`profile`, profile)\r\n  },\r\n  savePhoto(photoFile: string){\r\n    const formData = new FormData();\r\n    formData.append(\"image\", photoFile)\r\n    return instance.put(`profile/photo`, formData,{\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data'\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nexport const authAPI = {\r\n  me() {\r\n    return instance.get<ResponseType<MeResponseDataType>>(`auth/me`)\r\n  },\r\n  login(email: string, password: string, remember: boolean = false, captcha: string | undefined) {\r\n    return instance.post<ResponseType<MeResponseDataType>>(`auth/login`, {email, password, remember, captcha})\r\n    .then(res => res.data)\r\n  },\r\n  logout() {\r\n    return instance.delete<ResponseType<MeResponseDataType>>(`auth/login`)\r\n    .then(res => res.data)\r\n  }\r\n}\r\n\r\nexport const securityAPI = {\r\n  captcha() {\r\n    return instance.get<Captcha>(`security/get-captcha-url`)\r\n  },\r\n}\r\n\r\n","export default __webpack_public_path__ + \"static/media/page_u—Å.82556429.jpg\";","import React from 'react';\r\nimport page from '../../assets/img/page_u—Å.jpg';\r\nimport s from './News.module.css'\r\n\r\n\r\nconst News = () => {\r\n  return (\r\n    <div className={s.wrapper}>\r\n      <img src={page} alt=\"page\" />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default News;\r\n","import React from 'react';\r\nimport page from '../../assets/img/page_u—Å.jpg';\r\nimport s from './Music.module.css'\r\n\r\n\r\n\r\nconst Music = () => {\r\n  return (\r\n    <div className={s.wrapper}>\r\n      <img src={page} alt=\"page\" />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Music;\r\n","import React from 'react';\r\nimport page from '../../assets/img/page_u—Å.jpg';\r\nimport s from './Settings.module.css'\r\n\r\n\r\n\r\nconst Settings = () => {\r\n  return (\r\n    <div className={s.wrapper}>\r\n      <img src={page} alt=\"page\" />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Settings;\r\n","import { authAPI, ResultCodesEnum, securityAPI } from \"../api/api\";\r\nimport { Dispatch } from \"redux\";\r\nimport { ThunkAction } from 'redux-thunk';\r\nimport { StateType } from './store';\r\n\r\nconst SET_USER_DATA = 'SET_USER_DATA';\r\nconst SET_MESSAGE_ERROR_DATA = 'SET_MESSAGE_ERROR_DATA';\r\nconst SET_CAPTCHA = 'SET_CAPTCHA';\r\n\r\n\r\nexport type AuthPropsType = {\r\n  userId: string\r\n  email: string\r\n  login: string\r\n  isAuth: boolean\r\n  message: string\r\n  captcha: string\r\n}\r\n\r\nexport type AuthActionTypes = ReturnType<typeof setAuthUserData> |\r\n                              ReturnType<typeof setErrorMessageData> |\r\n                              ReturnType<typeof setCaptcha>\r\n\r\nlet initialState: AuthPropsType = {\r\n  email: \"\",\r\n  login: \"\",\r\n  isAuth: false,\r\n  userId: \"\",\r\n  message: \"\",\r\n  captcha: \"\"\r\n};\r\n\r\nconst authReducer = (state = initialState, action: AuthActionTypes): AuthPropsType => {\r\n  switch (action.type) {\r\n    case SET_USER_DATA:\r\n      return {\r\n        ...state,\r\n        ...action.data,\r\n      }\r\n      case SET_MESSAGE_ERROR_DATA:\r\n        return {\r\n          ...state,\r\n          message: action.payload.message\r\n        }\r\n      case SET_CAPTCHA:\r\n        return {\r\n          ...state,\r\n          captcha: action.payload.url\r\n        }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\n\r\nexport const setAuthUserData = (userId: string, email: string, login: string, isAuth: boolean) => ({type: SET_USER_DATA, data: {userId, email, login, isAuth}} as const)\r\nexport const setErrorMessageData = (message:string) => ({type: SET_MESSAGE_ERROR_DATA, payload: {message}} as const)\r\nexport const setCaptcha = (url:string) => ({type: SET_CAPTCHA, payload: {url}} as const)\r\n\r\n//thunk-logic\r\ntype ThunkType = ThunkAction<void, StateType, unknown, AuthActionTypes>\r\n\r\nexport const getAuthUserData = (): ThunkType => (dispatch: Dispatch<AuthActionTypes>) => {\r\n  authAPI.me().then(response => {\r\n    if (response.data.resultCode === 0) {\r\n      let {id, login, email} = response.data.data;\r\n      dispatch(setAuthUserData(id, email, login, true));\r\n    }\r\n  });\r\n}\r\n\r\nexport const login = (email: string, password: string, remember: boolean, captcha: string | undefined): ThunkType => (dispatch) => {\r\n  authAPI.login(email, password, remember, captcha).then(response => {\r\n    if (response.resultCode === ResultCodesEnum.Success) {\r\n      dispatch(getAuthUserData());\r\n      dispatch(setErrorMessageData(\"\"))\r\n      dispatch(setCaptcha(\"\"))\r\n    }\r\n    if (response.resultCode === ResultCodesEnum.Error) {\r\n      dispatch(setErrorMessageData(response.messages[0]));\r\n    }\r\n    if (response.resultCode === ResultCodesEnum.Captcha) {\r\n      dispatch(setErrorMessageData(response.messages[0]))\r\n      dispatch(getCaptcha());\r\n    }\r\n  });\r\n}\r\n\r\n\r\nexport const logout = (): ThunkType => (dispatch) => {\r\n  authAPI.logout().then(response => {\r\n    if (response.resultCode === ResultCodesEnum.Success) {\r\n      dispatch(setAuthUserData(\"\", \"\", \"\", false));\r\n    }\r\n  });\r\n}\r\n\r\nexport const getCaptcha = (): ThunkType => (dispatch) => {\r\n  securityAPI.captcha().then(response => {\r\n    debugger\r\n      const captcha = response.data\r\n      if(captcha){\r\n        dispatch(setCaptcha(captcha.url));\r\n      }\r\n  });\r\n}\r\n\r\n\r\nexport default authReducer;","import React from 'react';\r\nimport s from './Navbar.module.css'\r\n\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nexport type NavbarType = {\r\n  id?: string\r\n  url: string\r\n  name: string\r\n}\r\n\r\nconst Navbar: React.FC<NavbarType> = (props) => {\r\n\r\n\r\n  return (\r\n      <div>\r\n        <div className={s.list}>\r\n          <div className={s.list_items}>\r\n            <NavLink activeClassName={s.item_active} className={s.item} to={props.url}>{props.name}</NavLink>\r\n          </div>\r\n        </div>\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default Navbar;","import React from 'react';\r\nimport s from './Sidebar.module.css'\r\n\r\nimport Navbar, { NavbarType } from \"./Navbar/Navbar\"\r\n\r\n\r\nexport type SidebarType = {\r\n  navbar: Array<NavbarType>\r\n}\r\n\r\nconst Sidebar: React.FC<SidebarType> = (props) => {\r\n\r\n  let navElements = props.navbar.map( items => <Navbar url={items.url} name={items.name} id={items.id} key={items.id}/>);\r\n\r\n  return (\r\n    <nav className={s.wrapper}>\r\n        {navElements}\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default Sidebar;","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { RouteComponentProps, withRouter } from 'react-router-dom';\r\nimport { getAuthUserData, setAuthUserData } from '../../redux/authReducer';\r\nimport { NavbarType } from '../../redux/sidebarReducer';\r\nimport { StateType } from '../../redux/store';\r\nimport Sidebar from './Sidebar';\r\n\r\n\r\ntype MapStatePropsType = {\r\n  navbar: Array<NavbarType>\r\n}\r\n\r\ntype MapDispatchPropsType = {\r\n  getAuthUserData: () => void\r\n}\r\n\r\n\r\ntype OwnPropsType = MapStatePropsType & MapDispatchPropsType\r\ntype PropsType = RouteComponentProps & OwnPropsType\r\n\r\n\r\nexport const SidebarContainer: React.FC<PropsType> = ({navbar, getAuthUserData}) => {\r\n\r\n  useEffect(() => {\r\n    getAuthUserData();\r\n  }, [getAuthUserData])\r\n\r\n\r\n    return ( <Sidebar navbar={navbar}/>\r\n    );\r\n}\r\n\r\ntype MapStateToPropsType = {\r\n  navbar: Array<NavbarType>\r\n}\r\n\r\n\r\nconst mapStateToProps = (state: StateType): MapStateToPropsType => {\r\n  return {\r\n    navbar: state.sidebarPage.navbar,\r\n  }\r\n}\r\n\r\n\r\n\r\nlet withUrlDataContainerComponent = withRouter(SidebarContainer)\r\n\r\n\r\nexport default connect(mapStateToProps,{setAuthUserData, getAuthUserData}) (withUrlDataContainerComponent);","import { Dispatch } from 'redux';\r\nimport { ThunkAction } from 'redux-thunk';\r\nimport { DataType, userAPI } from './../api/api';\r\nimport { StateType } from './store';\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\r\n\r\n\r\nexport type UserType = {\r\n  id: number\r\n  photos: PhotosType\r\n  followed: boolean\r\n  name: string\r\n  status: string | null\r\n  uniqueUrlName: null | string\r\n}\r\n\r\ntype PhotosType = {\r\n  small: null | string\r\n  large: null | string\r\n}\r\n\r\nexport type UsersLocation = {\r\n  city: string\r\n  country: string\r\n}\r\n\r\nexport type UsersPageType = {\r\n  users: UserType[]\r\n  pageSize: number,\r\n  totalUsersCount: number,\r\n  currentPage: number\r\n  isFetching: boolean\r\n  followingInProgress: number[]\r\n}\r\n\r\nexport type UsersActionTypes =  ReturnType<typeof followSuccess> |\r\n                                ReturnType<typeof unfollowSuccess> |\r\n                                ReturnType<typeof setUsers> |\r\n                                ReturnType<typeof setCurrentPages> |\r\n                                ReturnType<typeof setUsersTotalCount> |\r\n                                ReturnType<typeof toggleIsFetching> |\r\n                                ReturnType<typeof toggleFollowingProgress>\r\n\r\nlet initialState: UsersPageType = {\r\n  users: [],\r\n  pageSize: 5,\r\n  totalUsersCount: 11,\r\n  currentPage: 1,\r\n  isFetching: true,\r\n  followingInProgress: [],\r\n};\r\n\r\n\r\n\r\nexport const usersReducer = (state = initialState, action: UsersActionTypes): UsersPageType => {\r\n  switch (action.type) {\r\n    case FOLLOW:\r\n      return {\r\n        ...state,\r\n        users: state.users.map((u) => {\r\n          if (u.id === action.userId) {\r\n            return { ...u, followed: true };\r\n          }\r\n          return u;\r\n        }),\r\n      };\r\n    case UNFOLLOW:\r\n      return {\r\n        ...state,\r\n        users: state.users.map((u) => {\r\n          if (u.id === action.userId) {\r\n            return { ...u, followed: false };\r\n          }\r\n          return u;\r\n        }),\r\n      };\r\n    case SET_USERS: {\r\n      return { ...state, users: action.users }; //–±–µ—Ä–µ–º —Å—Ç–∞—Ä—ã–π —Å—Ç–µ–π—Ç –∏ –Ω–æ–≤—ã–π(—Å–∫–ª–µ–∏–≤–∞–µ–º)\r\n    }\r\n    case SET_CURRENT_PAGE: {\r\n      return { ...state, currentPage: action.currentPage }; //–±–µ—Ä–µ–º —Å—Ç–∞—Ä—ã–π —Å—Ç–µ–π—Ç –∏ –Ω–æ–≤—ã–π(—Å–∫–ª–µ–∏–≤–∞–µ–º)\r\n    }\r\n    case SET_TOTAL_USERS_COUNT: {\r\n      return { ...state, totalUsersCount: action.count }; //–±–µ—Ä–µ–º —Å—Ç–∞—Ä—ã–π —Å—Ç–µ–π—Ç –∏ –Ω–æ–≤—ã–π(—Å–∫–ª–µ–∏–≤–∞–µ–º)\r\n    }\r\n    case TOGGLE_IS_FETCHING: {\r\n      return { ...state, isFetching: action.isFetching }; //–±–µ—Ä–µ–º —Å—Ç–∞—Ä—ã–π —Å—Ç–µ–π—Ç –∏ –Ω–æ–≤—ã–π(—Å–∫–ª–µ–∏–≤–∞–µ–º)\r\n    }\r\n    case TOGGLE_IS_FOLLOWING_PROGRESS: {\r\n      return {\r\n        ...state,\r\n        followingInProgress: action.isFetching\r\n          ? [...state.followingInProgress, action.userId]\r\n          : state.followingInProgress.filter((id) => id !== action.userId),\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n\r\n\r\nexport const followSuccess = (userId: number) => ({ type: FOLLOW, userId } as const);\r\nexport const unfollowSuccess = (userId: number) => ({ type: UNFOLLOW, userId } as const);\r\nexport const setUsers = (users: UserType[]) => ({ type: SET_USERS, users } as const);\r\nexport const setCurrentPages = (currentPage: number) => ({ type: SET_CURRENT_PAGE, currentPage } as const);\r\nexport const setUsersTotalCount = (totalUsersCount: number) => ({\r\n  type: SET_TOTAL_USERS_COUNT,\r\n  count: totalUsersCount,\r\n} as const);\r\nexport const toggleIsFetching = (isFetching: boolean) => ({ type: TOGGLE_IS_FETCHING, isFetching } as const);\r\nexport const toggleFollowingProgress = (isFetching: boolean, userId: number) => ({\r\n  type: TOGGLE_IS_FOLLOWING_PROGRESS,\r\n  isFetching,\r\n  userId,\r\n} as const);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\ntype ThunkType = ThunkAction<void, StateType, unknown, UsersActionTypes>\r\n\r\n// thunk logic\r\nexport const getUsers = (currentPage: number, pageSize: number): ThunkType => {\r\n  return (dispatch: Dispatch<UsersActionTypes>) => {\r\n    dispatch(toggleIsFetching(true));\r\n    dispatch(setCurrentPages(currentPage));\r\n    userAPI.getUsers(currentPage, pageSize).then((data: DataType) => {\r\n      dispatch(setUsers(data.items));\r\n      dispatch(setUsersTotalCount(data.totalCount));\r\n      dispatch(toggleIsFetching(false));\r\n    });\r\n  };\r\n};\r\n\r\nexport const follow = (userId: number): ThunkType => {\r\n  return (dispatch: Dispatch<UsersActionTypes>) => {\r\n    dispatch(toggleFollowingProgress(true, userId));\r\n    userAPI.follow(userId)\r\n    .then(response => {\r\n      console.log(response.data.resultCode);\r\n      if (response.data.resultCode === 0) {\r\n        dispatch(followSuccess(userId));\r\n      }\r\n      dispatch(toggleFollowingProgress(false, userId));\r\n    });\r\n  }\r\n}\r\n\r\nexport const unfollow = (userId: number): ThunkType => {\r\n  return (dispatch: Dispatch<UsersActionTypes>) => {\r\n    dispatch(toggleFollowingProgress(true, userId));\r\n    userAPI.unfollow(userId)\r\n    .then(response => {\r\n      if (response.data.resultCode === 0) {\r\n        dispatch(unfollowSuccess(userId));\r\n      }\r\n      dispatch(toggleFollowingProgress(false, userId));\r\n    });\r\n  }\r\n}\r\n\r\n","import React, { useState } from 'react'\r\nimport s from './Paginator.module.css'\r\n\r\nexport type PaginatorType = {\r\n  totalUsersCount: number\r\n  pageSize: number\r\n  currentPage: number\r\n  onPageChanged: (pageNumber: number) => void\r\n  isAuth: boolean\r\n}\r\n\r\nexport const Paginator = React.memo(function(props: PaginatorType) {\r\n\r\n  let pagesCount = Math.ceil (props.totalUsersCount / props.pageSize);\r\n  console.log(props.totalUsersCount);\r\n  \r\n  let pages = [];\r\n  for (let i=1; i <= pagesCount; i++) {\r\n    pages.push(i);\r\n  }\r\n\r\n  let portionSize = 5\r\n\r\n  let portionCount = Math.ceil(pagesCount / portionSize)\r\n  let [portionNumber, setPortionNumber] = useState(1);\r\n  let leftPortionPageNumber = (portionNumber -1) * portionSize + 1;\r\n  let rightPortionPageNumber = portionNumber * portionSize;\r\n\r\n\r\n  const prev = \"<\"\r\n  const next = \">\"\r\n\r\n  const lastPages = pages[pages.length - 1]\r\n\r\n\r\n  return (\r\n    <div className={s.pagination_wrapper}>\r\n          {portionNumber > 1 ? <div className={s.arrow} onClick={() => {setPortionNumber(portionNumber - 1)}}>{prev}</div> : <div className={s.arrow_disable}></div>}\r\n            <div className={s.pagination}>\r\n              {pages\r\n                .filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\r\n                .map( p => {\r\n                  return (\r\n                          <div className={s.pagination_item_wrapper} key={p} onClick={() => {props.onPageChanged(p)}}>\r\n                                <span  className={props.currentPage === p ? s.pagination_wrapper_selected : \"\"}\r\n                                  >{p}</span>\r\n                          </div>\r\n                        )\r\n              })}\r\n              <div className={s.ellipsis}>...</div>\r\n              {pages\r\n              .filter( p => p === lastPages)\r\n              .map(p => {\r\n                return (\r\n                  <div className={s.pagination_item_wrapper} key={p} onClick={() => {props.onPageChanged(p)}}>\r\n                        <span  className={props.currentPage === p ? s.pagination_wrapper_selected : \"\"}\r\n                          >{p}</span>\r\n                  </div>\r\n                )\r\n              })}\r\n            </div>\r\n          {portionCount > portionNumber ? <div className={s.arrow} onClick={() => {setPortionNumber(portionNumber + 1)}}>{next}</div> : <div className={s.arrow_disable}></div>}\r\n    </div>\r\n  )\r\n})\r\n","import React from \"react\"\r\nimport ContentLoader from \"react-content-loader\"\r\nimport s from './UserSkeletone.module.css'\r\n\r\nconst MyLoader = (props: any) => (\r\n  <ContentLoader\r\n    speed={2}\r\n    width={800}\r\n    height={830}\r\n    viewBox=\"0 0 800 830\"\r\n    backgroundColor=\"#dedede\"\r\n    foregroundColor=\"#5284c5\"\r\n    className={s.wrapper}\r\n    {...props}\r\n  >\r\n    <circle cx=\"51\" cy=\"66\" r=\"48\" /> \r\n    <rect x=\"17\" y=\"130\" rx=\"0\" ry=\"0\" width=\"70\" height=\"29\" /> \r\n    <rect x=\"119\" y=\"26\" rx=\"10\" ry=\"10\" width=\"471\" height=\"65\" /> \r\n    <circle cx=\"50\" cy=\"228\" r=\"48\" /> \r\n    <rect x=\"16\" y=\"292\" rx=\"0\" ry=\"0\" width=\"70\" height=\"29\" /> \r\n    <rect x=\"118\" y=\"188\" rx=\"10\" ry=\"10\" width=\"471\" height=\"65\" /> \r\n    <circle cx=\"51\" cy=\"391\" r=\"48\" /> \r\n    <rect x=\"17\" y=\"455\" rx=\"0\" ry=\"0\" width=\"70\" height=\"29\" /> \r\n    <rect x=\"119\" y=\"351\" rx=\"10\" ry=\"10\" width=\"471\" height=\"65\" /> \r\n    <circle cx=\"50\" cy=\"553\" r=\"48\" /> \r\n    <rect x=\"16\" y=\"617\" rx=\"0\" ry=\"0\" width=\"70\" height=\"29\" /> \r\n    <rect x=\"118\" y=\"513\" rx=\"10\" ry=\"10\" width=\"471\" height=\"65\" /> \r\n    <circle cx=\"52\" cy=\"719\" r=\"48\" /> \r\n    <rect x=\"18\" y=\"783\" rx=\"0\" ry=\"0\" width=\"70\" height=\"29\" /> \r\n    <rect x=\"120\" y=\"679\" rx=\"10\" ry=\"10\" width=\"471\" height=\"65\" />\r\n  </ContentLoader>\r\n)\r\n\r\nexport default MyLoader\r\n","import React from 'react'\r\nimport { NavLink } from 'react-router-dom';\r\nimport { UserType } from '../../redux/usersReducer';\r\nimport { Paginator } from '../Paginator/Paginator';\r\nimport UserSkeletone from './UserSkeletone/UserSkeletone';\r\nimport s from './Users.module.css'\r\nimport userPhoto from '../../assets/img/users.png'\r\n\r\nexport type UsersType = {\r\n  totalUsersCount: number\r\n  pageSize: number\r\n  currentPage: number\r\n  onPageChanged: (pageNumber: number) => void\r\n  users: UserType[]\r\n  follow: (userId: number) => void\r\n  unfollow: (userId: number) => void\r\n  followingInProgress: number[]\r\n  isAuth: boolean\r\n  isFetching: boolean\r\n}\r\n\r\nexport const Users = (props: UsersType) => {\r\n  console.log(props.users);\r\n  \r\n  return (\r\n    <div>\r\n      <Paginator  totalUsersCount={props.totalUsersCount}\r\n                  pageSize={props.pageSize}\r\n                  currentPage={props.currentPage}\r\n                  onPageChanged={props.onPageChanged}\r\n                  isAuth={props.isAuth}\r\n      />\r\n      {props.isFetching\r\n      ? <UserSkeletone/>\r\n      : props.users.map( (u) =>\r\n        <div key={u.id}>\r\n          <div className={s.wrapper}>\r\n            <div className={s.logo}>\r\n            <NavLink to={'/profile/' + u.id}> <img src={u.photos.small != null ? u.photos.small : userPhoto} alt=\"avatar\" /></NavLink>\r\n              {props.isAuth &&\r\n                <div className=\"users__btn\">\r\n                {u.followed\r\n                  ? <button disabled={props.followingInProgress.some(id => id === u.id)}\r\n                            onClick={() => {props.unfollow(u.id)}}>\r\n                      Unfollow</button>\r\n\r\n                    : <button disabled={props.followingInProgress.some(id => id === u.id)}\r\n                              onClick={() => {props.follow(u.id)}}>\r\n                      Follow</button>\r\n                }\r\n              </div>}\r\n            </div>\r\n            <div className={s.descr_wrapper_outer}>\r\n              <div className={s.descr_wrapper_inner}>\r\n                <div className={s.descr}>\r\n                  <div className=\"users__descr-name\">{u.name}</div>\r\n                  <div className={s.descr_status}>{u.status}</div>\r\n                </div>\r\n                <div className={s.location}>\r\n                  {/* <div className={s.location_country}>{\"u.location.country\"},</div>\r\n                  <div className={s.location_city}>{\"u.location.city\"}</div> */}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n      </div>)}\r\n  </div>\r\n  )\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport { connect} from \"react-redux\";\r\nimport { follow, setCurrentPages, unfollow, toggleFollowingProgress, getUsers,  UserType } from '../../redux/usersReducer';\r\nimport {Users} from './Users';\r\nimport { StateType } from '../../redux/store';\r\nimport {RouteComponentProps, withRouter } from 'react-router-dom';\r\n\r\ntype UsersContainerType = {\r\n  getUsers: (currentPage: number, pageSize: number) => void\r\n  users: UserType[]\r\n  currentPage: number\r\n  pageSize: number\r\n  isFetching: boolean\r\n  totalUsersCount: number\r\n  followingInProgress: number[]\r\n  follow: (userId: number) => void\r\n  unfollow: (userId: number) => void\r\n  isAuth: boolean\r\n}\r\n\r\ntype PropsType = RouteComponentProps & UsersContainerType\r\n\r\n\r\nclass UsersContainer extends React.Component<PropsType> {\r\n\r\n  componentDidMount() {\r\n    this.props.getUsers(this.props.currentPage, this.props.pageSize);\r\n    }\r\n\r\n  onPageChanged = (pageNumber: number) => {\r\n    this.props.getUsers(pageNumber, this.props.pageSize);\r\n  }\r\n\r\n  render() {\r\n\r\n      return (\r\n      <>\r\n          <Users  {...this.props} onPageChanged={this.onPageChanged}/>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\n\r\ntype MapStatePropsType = {\r\n  users: UserType[]\r\n  pageSize: number\r\n  totalUsersCount: number\r\n  currentPage: number\r\n  isFetching: boolean\r\n  followingInProgress: number[]\r\n  isAuth: boolean\r\n}\r\n\r\n\r\nlet mapStateToProps = (state: StateType): MapStatePropsType => {\r\n  return {\r\n    users: state.usersPage.users,\r\n    pageSize: state.usersPage.pageSize,\r\n    totalUsersCount: state.usersPage.totalUsersCount,\r\n    currentPage: state.usersPage.currentPage,\r\n    isFetching: state.usersPage.isFetching,\r\n    followingInProgress: state.usersPage.followingInProgress,\r\n    isAuth: state.auth.isAuth,\r\n  }\r\n}\r\n\r\n\r\n\r\n// let mapDispatchToProps = (dispatch) => {\r\n//   return {\r\n//     follow: (userId) => {\r\n//       dispatch(followAC(userId))\r\n//     },\r\n//     unfollow: (userId) => {\r\n//       dispatch(unfollowAC(userId))\r\n//     },\r\n//     setUsers: (users) => {\r\n//       dispatch(setUsersAC(users))\r\n//     },\r\n//     setCurrentPage: (pageNumber) => {\r\n//       dispatch(setCurrentPagesAC(pageNumber))\r\n//     },\r\n//     setTotalUsersCount: (totalCount) => {\r\n//       dispatch(setUsersTotalCountAC(totalCount))\r\n//     },\r\n//     toggleIsFetching: (isFetching) => {\r\n//       dispatch(toggleIsFetchingAC(isFetching))\r\n//     },\r\n//   }\r\n// }\r\n\r\n//–Ω–∏–∂–µ –≤ –∫–æ–Ω–Ω–µ–∫—Ç–µ —Å–æ–∫—Ä–∞—â–µ–Ω–Ω—ã–π –∫–æ–¥, –ø–µ—Ä–µ–¥–∞–Ω–Ω—ã–π –≤—Ç–æ—Ä—ã–º –∞—Ä–≥—É–º–µ–Ω—Ç–æ–º –≤–≤–∏–¥–µ –æ–±—ä–µ–∫—Ç–∞ (–µ—Å–ª–∏ –∑–Ω–∞—á–µ–Ω–∏–µ == —Å–≤–æ–π—Å—Ç–≤—É follow: follow, —Ç–æ –º–æ–∂–Ω–æ –ø–∏—Å–∞—Ç—å –≤ –æ–¥–Ω–æ —Å–ª–æ–≤–æ)\r\n\r\n\r\nlet WithUrlDataContainerComponent = withRouter(UsersContainer);\r\n\r\n\r\nexport default connect(mapStateToProps, {\r\n    follow,\r\n    unfollow,\r\n    setCurrentPages,\r\n    toggleFollowingProgress,\r\n    getUsers,\r\n  }) (WithUrlDataContainerComponent);","export default __webpack_public_path__ + \"static/media/soc_logo.5829bfdb.png\";","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport s from './Header.module.css'\r\nimport logo from \"../../assets/img/soc_logo.png\";\r\n\r\n\r\ntype HeaderPropsType = {\r\n  isAuth: boolean\r\n  onLogout: () => void\r\n  state: boolean\r\n}\r\n\r\n\r\nconst Header: React.FC<HeaderPropsType> = ({isAuth, onLogout}) => {\r\n\r\n  return (\r\n    <header className={s.header}>\r\n      <img className={s.header_img} src={logo} alt=\"logo\" />\r\n      {!isAuth\r\n      ? <div className={s.header_login}>\r\n        {isAuth ? 'Ok' : <Link to={'/login'}>Login</Link>}\r\n      </div>\r\n      :\r\n      <div className={s.button}>\r\n        <button onClick={()=>{onLogout()}} >Logout</button>\r\n      </div>}\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;","import React, { useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { RouteComponentProps, withRouter } from 'react-router-dom';\r\nimport { compose } from 'redux';\r\nimport { logout, setAuthUserData } from '../../redux/authReducer';\r\nimport { StateType } from '../../redux/store';\r\nimport Header from './Header';\r\n\r\ntype MapStatePropsType = {\r\n  isAuth: boolean\r\n}\r\n\r\ntype MapDispatchPropsType = {\r\n  logout: () => void\r\n}\r\n\r\n\r\n\r\ntype OwnPropsType = MapStatePropsType & MapDispatchPropsType\r\ntype PropsType = RouteComponentProps & OwnPropsType\r\n\r\n\r\n\r\nconst HeaderContainer: React.FC<PropsType> = ({isAuth, logout}) => {\r\n\r\n  const [state, setState] = useState(false)\r\n  console.log(state);\r\n  console.log(\"render isAuth\", isAuth);\r\n\r\n\r\n  const onLogout = () => {\r\n    setState(!state)\r\n  }\r\n\r\n  useEffect(() => {\r\n    if(isAuth){\r\n      logout();\r\n    }\r\n  }, [state])\r\n\r\n\r\n\r\n    return ( <Header isAuth={isAuth} onLogout={onLogout} state={state}/>\r\n    );\r\n}\r\n\r\ntype MapStateToPropsType = {\r\n  isAuth: boolean\r\n  login: string\r\n}\r\n\r\nconst mapStateToProps = (state: StateType): MapStateToPropsType => ({\r\n  isAuth: state.auth.isAuth,\r\n  login: state.auth.login\r\n});\r\n\r\nlet withRout = withRouter(HeaderContainer)\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, {setAuthUserData, logout})) (withRout);","import React from 'react'\r\nimport s from './LoginForm.module.css'\r\nimport { SubmitHandler, useForm } from 'react-hook-form';\r\nimport { LoginType } from '../../api/api';\r\nimport { login } from '../../redux/authReducer';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { StateType } from '../../redux/store';\r\n\r\ntype Inputs = {\r\n  email: string\r\n  password: string\r\n  rememberMe: boolean\r\n  captcha: string\r\n}\r\n\r\n\r\nexport const LoginForm = () => {\r\n\r\n  const { register, handleSubmit, formState: {errors}, watch} = useForm<Inputs>();\r\n\r\n  const dispatch = useDispatch()\r\n  const errorAuth = useSelector<StateType, string>(state => state.auth.message)\r\n  const captcha = useSelector<StateType, string | undefined>(state => state.auth.captcha)\r\n  console.log(captcha);\r\n\r\n  const onSubmit: SubmitHandler<Inputs> = (data: LoginType) => dispatch(login(data.email, data.password, data.rememberMe, data.captcha));\r\n\r\n  return (\r\n    <form className={s.form} onSubmit={handleSubmit(onSubmit)}>\r\n      <input className={s.input} type={\"email\"} {...register(\"email\", { required: true, maxLength: 20 })} placeholder={\"email\"}/>\r\n      {errors.email && <div className={s.required}>Required</div>}\r\n      <div>&nbsp;</div>\r\n      <input className={s.input} type={\"password\"} {...register(\"password\", { required: true, minLength: 3 })}  placeholder={\"password\"}/>\r\n      {errors.password && <div className={s.required}>Required</div>}\r\n      <div>&nbsp;</div>\r\n      <div className={s.checkbox_wrapper}>\r\n        <input className={s.checkbox} {...register(\"rememberMe\")} type={'checkbox'}/>\r\n        <span className={s.text}>remember me</span>\r\n      </div>\r\n      <div>&nbsp;</div>\r\n      {captcha\r\n        &&\r\n        <div>\r\n          <div><img src={captcha} alt=\"captchaImage\"/></div>\r\n          <input className={s.input_captcha} {...register(\"captcha\")} type={'text'} placeholder={\"captcha\"}/>\r\n          <div>&nbsp;</div>\r\n        </div>\r\n      }\r\n      <input className={s.button} type=\"submit\" value={\"LOGIN\"}/>\r\n      {errorAuth && <div className={s.errorMessage}>{errorAuth}</div>}\r\n    </form>\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import { useFormik } from 'formik';\r\n// import React from 'react'\r\n// import s from './Login.module.css'\r\n// import * as Yup from 'yup';\r\n\r\n\r\n\r\n// type LoginFormPropsType = {\r\n//   login: (email: string, password: string, remember: boolean)=> void\r\n// }\r\n\r\n// export const LoginForm: React.FC<LoginFormPropsType> = ({login}) => {\r\n//   const formik = useFormik({\r\n//     initialValues: {\r\n//       email: '',\r\n//       password: '',\r\n//       rememberMe: \"false\",\r\n//     },\r\n//     validationSchema: Yup.object({\r\n//       email: Yup.string()\r\n//         .max(20, 'Must be 15 characters or less')\r\n//         .required('Required'),\r\n//       password: Yup.string()\r\n//         .max(20, 'Must be 20 characters or less')\r\n//         .required('Required'),\r\n//     }),\r\n//     onSubmit: values => {\r\n//       login(values.email, values.password, !values.rememberMe)\r\n//       console.log(\"log\",values.rememberMe);\r\n//     },\r\n//   });\r\n\r\n//   return (\r\n//     <form className={s.form} >\r\n//       <label htmlFor=\"email\"></label>\r\n//       <input\r\n//         name=\"email\"\r\n//         type=\"text\"\r\n//         onChange={formik.handleChange}\r\n//         onBlur={formik.handleBlur}\r\n//         value={formik.values.email}\r\n//         className={formik.touched.email && formik.errors.email ? s.error_input : s.input}\r\n//       />\r\n//       {formik.touched.email && formik.errors.email ? (\r\n//         <div className={s.error}>{formik.errors.email}</div>\r\n//       ) : <div>&nbsp;</div>}\r\n\r\n//       <label htmlFor=\"password\"></label>\r\n//       <input\r\n//         name=\"password\"\r\n//         type=\"password\"\r\n//         onChange={formik.handleChange}\r\n//         onBlur={formik.handleBlur}\r\n//         value={formik.values.password}\r\n//         className={formik.touched.password && formik.errors.password ? s.error_input : s.input}\r\n//       />\r\n//       {formik.touched.password && formik.errors.password ? (\r\n//         <div className={s.error}>{formik.errors.password}</div>\r\n//       ) : <div>&nbsp;</div>}\r\n//       <div className={s.remember}>\r\n//         <input\r\n//           name=\"remember\"\r\n//           type=\"checkbox\"\r\n//           onChange={formik.handleChange}\r\n//           onBlur={formik.handleBlur}\r\n//           //@ts-ignore\r\n//           value={formik.values.rememberMe}\r\n//         />\r\n//           <label htmlFor=\"remember\">remember me</label>\r\n//       </div>\r\n//       <button className={s.btn} type=\"submit\" onClick={()=> {}}>Submit</button>\r\n//     </form>\r\n//   );\r\n// };\r\n\r\n","import React from 'react'\r\nimport s from './Login.module.css'\r\nimport { LoginForm } from './LoginForm';\r\nimport { useSelector } from 'react-redux';\r\nimport { Redirect } from 'react-router';\r\nimport { StateType } from '../../redux/store';\r\n\r\n\r\n\r\nexport const Login = () => {\r\n\r\n  const isAuth = useSelector<StateType, boolean>(state => state.auth.isAuth)\r\n\r\n  if (isAuth) {return <Redirect to={\"/profile\"}/>}\r\n\r\n  return (\r\n    <div className={s.wrapper}>\r\n      <div className={s.login}>\r\n        <LoginForm/>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n","import { ThunkAction } from 'redux-thunk';\r\nimport { StateType } from './store';\r\nimport { getAuthUserData } from './authReducer';\r\n\r\nconst SET_INITIALIZED = 'SET_INITIALIZED';\r\n\r\n\r\nexport type AppPropsType = {\r\n  initialized: boolean,\r\n}\r\n\r\nexport type AppActionTypes = ReturnType<typeof initializedSuccess>\r\n\r\nlet initialState: AppPropsType = {\r\n  initialized: false,\r\n};\r\n\r\nconst appReducer = (state = initialState, action: AppActionTypes): AppPropsType => {\r\n  switch (action.type) {\r\n    case SET_INITIALIZED:\r\n      return {\r\n        ...state,\r\n        initialized: true,\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\n\r\nexport const initializedSuccess = () => ({type: SET_INITIALIZED} as const)\r\n\r\n//thunk-logic\r\ntype ThunkType = ThunkAction<void, StateType, unknown, AppActionTypes>\r\n\r\nexport const initialize = (): ThunkType => (dispatch) => {\r\n  let promise = dispatch(getAuthUserData())\r\n  Promise.all([promise])\r\n    .then(() => {\r\n    dispatch(initializedSuccess())\r\n  })\r\n}\r\n\r\n\r\nexport default appReducer;","import React from 'react'\r\nimport { useSelector } from 'react-redux';\r\nimport { FriendsType } from '../../redux/friendsReducer';\r\nimport { StateType } from '../../redux/store';\r\nimport { UserType } from '../../redux/usersReducer';\r\nimport Friends from './Friends/Friends';\r\nimport s from './FriendsBar.module.css'\r\n\r\n\r\n\r\nexport const FriendsBar = () => {\r\n\r\n  const friendsElements = useSelector<StateType, UserType[]>(state => state.usersPage.users)\r\n  console.log(friendsElements);\r\n\r\n    return (\r\n    <>\r\n    {/* // <div className=\"sidebar__friends\">\r\n    //   <div className={s.friends_label}>\r\n    //     Friends\r\n    //   </div>\r\n    //   <div className={s.friends_items}>\r\n    //     {\r\n    //     friendsElements.map( items => items.followed ? <Friends name={items.name} photos={items.photos.small} key={items.id}/> : null)}\r\n    //   </div>\r\n    // </div> */}\r\n    </>\r\n  )\r\n}\r\n","import React, { Suspense } from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport { compose } from 'redux';\r\nimport { connect } from 'react-redux';\r\n\r\nimport s from './App.module.css';\r\n\r\nimport { StateType } from './redux/store';\r\n\r\nimport News from './components/News/News';\r\nimport Music from './components/Music/Music';\r\nimport Settings from './components/Settings/Settings';\r\nimport SidebarContainer from './components/Sidebar/SidebarContainer';\r\nimport UsersContainer from './components/Users/UsersContainer';\r\nimport HeaderContainer from './components/Header/HeaderContainer';\r\nimport {Login} from './components/Login/Login';\r\nimport { initializedSuccess } from './redux/appReducer';\r\nimport Spinner from './components/Spinner/Spinner';\r\nimport {FriendsBar} from './components/FriendsBar/FriendsBar';\r\n\r\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'));\r\nconst ProfileContainer = React.lazy(() => import('./components/Profile/ProfileContainer'));\r\n\r\n\r\n\r\n\r\ntype PropsType = {\r\n  initializedSuccess: () => void\r\n  initialized: boolean\r\n}\r\n\r\nclass App extends React.Component<PropsType> {\r\n  componentDidMount() {\r\n    this.props.initializedSuccess()\r\n  }\r\n\r\n  render(){\r\n  if(!this.props.initialized){\r\n    return <Spinner/>\r\n  }\r\n\r\n    return (\r\n      <div className={s.app_wrapper}>\r\n        <div className={s.app_outer}>\r\n          <div className={s.app_inner}>\r\n              <HeaderContainer />\r\n            <div className={s.wrapper}>\r\n              <SidebarContainer />\r\n              <div className={s.content}>\r\n                <Route path=\"/profile/:userId?\" render={() =>\r\n                                                              <Suspense fallback={<Spinner/>}>\r\n                                                                <ProfileContainer />\r\n                                                              </Suspense>}/>\r\n                <Route path=\"/messages\" render={() =>\r\n                                                              <Suspense fallback={<Spinner/>}>\r\n                                                                <DialogsContainer />\r\n                                                              </Suspense>}/>\r\n                <Route path=\"/users\" render={ () => <UsersContainer />}/>\r\n                <Route path=\"/news\" render={() => <News />} />\r\n                <Route path=\"/music\" render={() => <Music />} />\r\n                <Route path=\"/settings\" render={() => <Settings />} />\r\n                <Route path=\"/login\" render={ () => <Login/>}/>\r\n              </div>\r\n              <FriendsBar/>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n}\r\n\r\n\r\ntype MapStateToPropsType = {\r\n  initialized: boolean,\r\n}\r\n\r\nconst mapStateToProps = (state: StateType): MapStateToPropsType => ({\r\n  initialized: state.app.initialized,\r\n});\r\n\r\n\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, {initializedSuccess}),\r\n  )(App);\r\n\r\n","import { ActionTypes } from './store';\r\nimport { v1 } from 'uuid';\r\n\r\n\r\nexport type NavbarType = {\r\n  id: string\r\n  name: string\r\n  url: string\r\n}\r\n\r\n\r\nexport type SidebarPageType = {\r\n  navbar: Array<NavbarType>\r\n}\r\n\r\n\r\nlet initialState: SidebarPageType = {\r\n  navbar: [\r\n    {id: v1(), name: 'Profile', url: '/profile'},\r\n    {id: v1(), name: 'Messages', url: '/messages'},\r\n    {id: v1(), name: 'Users', url: '/users'},\r\n    {id: v1(), name: 'News', url: '/news'},\r\n    {id: v1(), name: 'Music', url: '/music'},\r\n    {id: v1(), name: 'Settings', url: '/settings'},\r\n  ]\r\n}\r\n\r\nconst sidebarReducer = (state = initialState, action: ActionTypes) => {\r\n  // switch (action.type) {\r\n    // case ADD_POST:\r\n    //   const newPost: PostsType = {\r\n    //     id: v1(),\r\n    //     message: action.newText\r\n    //   }\r\n    //   state.posts.push(newPost)\r\n    //   return state;\r\n    // case ON_POST_CHANGE:\r\n    //   state.newPostText = action.newText\r\n    //   return state;\r\n    // default:\r\n      return state;\r\n  }\r\n\r\nexport default sidebarReducer;","import { v1 } from 'uuid';\r\nimport { ActionTypes } from './store';\r\n\r\n\r\n// const NEW_MESSAGE = \"NEW_MESSAGE\";\r\n// const SEND_MESSAGE = \"SEND_MESSAGE\";\r\n\r\nexport type FriendsType = {\r\n  id: string\r\n  name: string\r\n}\r\n\r\nexport type FriendsBarType = {\r\n  friends: Array<FriendsType>\r\n}\r\n\r\n\r\nlet initialState: FriendsBarType = {\r\n      friends: [\r\n        {id: v1(), name: 'Andrew'},\r\n        {id: v1(), name: 'Sasha'},\r\n        {id: v1(), name: 'Sveta'},\r\n      ]\r\n}\r\n\r\n\r\nconst friendsReducer = (state = initialState, action: ActionTypes) => {\r\n    // switch (action.type) {\r\n    //   case NEW_MESSAGE:\r\n    //     state.newMessageBody = action.newText\r\n    //     let text: MessageType = {id: v1(), message: 'Hi'}\r\n    //     state.messages.push(text)\r\n    //     return state;\r\n    //   case SEND_MESSAGE:\r\n    //     state.newMessageBody = action.newText\r\n    //     return state;\r\n    //   default:\r\n        return state;\r\n    }\r\n\r\n\r\n// export const sendMessageCreator  = (text: string) => ({type: NEW_MESSAGE, newText: text})\r\n// export const updateMessageCreator  = (text: string) => ({type: SEND_MESSAGE, newText: text})\r\n\r\n\r\nexport default friendsReducer;\r\n","import { applyMiddleware, combineReducers, createStore } from \"redux\";\r\nimport dialogsReducer, { DialogsActionTypes } from './dialogsReducer';\r\nimport profileReducer, { ProfileActionTypes } from './profileReducer';\r\nimport sidebarReducer from './sidebarReducer';\r\nimport friendsReducer from './friendsReducer';\r\nimport {UsersActionTypes, usersReducer} from './usersReducer';\r\nimport thunkMiddleware from \"redux-thunk\"\r\nimport authReducer, { AuthActionTypes } from \"./authReducer\";\r\nimport appReducer from \"./appReducer\";\r\n\r\nexport type StoreType = {\r\n  state: StateType\r\n  dispatch: (action: ActionTypes) => void\r\n}\r\n\r\n\r\n\r\nexport type ActionTypes =  ProfileActionTypes | DialogsActionTypes | UsersActionTypes | AuthActionTypes\r\n\r\n\r\n\r\n\r\nexport type StateType = ReturnType<typeof rootReducer>\r\n\r\n\r\nexport const rootReducer = combineReducers({\r\n  profilePage: profileReducer,\r\n  dialogsPage: dialogsReducer,\r\n  sidebarPage: sidebarReducer,\r\n  friendsBar: friendsReducer,\r\n  usersPage: usersReducer,\r\n  auth: authReducer,\r\n  app: appReducer,\r\n});\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(thunkMiddleware));\r\n\r\n//@ts-ignore\r\nwindow.store = store;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport {   HashRouter } from 'react-router-dom';\r\nimport {store }  from './redux/store';\r\nimport { Provider } from 'react-redux';\r\n\r\n\r\n\r\n  ReactDOM.render(\r\n    <HashRouter>\r\n      <Provider store={store}>\r\n          <App />\r\n      </Provider>\r\n    </HashRouter>,\r\n    document.getElementById('root')\r\n  );\r\n\r\n\r\n\r\n"],"sourceRoot":""}